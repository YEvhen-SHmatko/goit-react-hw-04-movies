{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","state","data","id","this","props","match","params","API","then","setState","catch","error","console","results","length","map","result","key","author","content","Component"],"mappings":"8NAIqBA,E,2MASnBC,MAAQ,CACNC,KAAM,I,mFAGa,IAAD,OAEVC,EADUC,KAAKC,MAAfC,MACaC,OAAbJ,GACRK,IAAqBL,GAClBM,MAAK,gBAAGP,EAAH,EAAGA,KAAH,OAAc,EAAKQ,SAAS,CAAER,YACnCS,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,Q,+BAGxB,IACAV,EAASE,KAAKH,MAAdC,KACR,OACE,oCACE,4BACIA,EAAKY,SACLZ,EAAKY,QAAQC,OAAS,GACtBb,EAAKY,QAAQE,KAAI,SAAAC,GAAM,OACrB,wBAAIC,IAAKD,EAAOd,IACd,4BAAKc,EAAOE,QACZ,2BAAIF,EAAOG,cAER,iF,GAjCkBC","file":"static/js/Reviews.1cbbaa21.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as API from '../../services/api';\n\nexport default class Reviews extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        id: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    data: {},\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { id } = match.params;\n    API.getMoviesReviews(id)\n      .then(({ data }) => this.setState({ data }))\n      .catch(error => console.error(error));\n  }\n\n  render() {\n    const { data } = this.state;\n    return (\n      <>\n        <ul>\n          {(data.results &&\n            data.results.length > 0 &&\n            data.results.map(result => (\n              <li key={result.id}>\n                <h5>{result.author}</h5>\n                <p>{result.content}</p>\n              </li>\n            ))) || <div>We do not have any reviews for this movie.</div>}\n        </ul>\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}