{"version":3,"sources":["services/api.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["API_BASE_URL","API_KEY","getMoviesTrending","mediaType","timeWindow","Axios","get","getMoviesId","id","getMoviesQuery","query","getMoviesCredits","getMoviesReviews","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","mask","log","LN2","step","RegExp","replace","test","Cast","lazy","Reviews","MovieDetailsPage","state","data","goBack","props","history","this","match","params","API","then","setState","catch","error","PNotify","text","type","onClick","style","width","src","backdrop_path","alt","original_title","vote_average","overview","genres","map","key","shortId","name","to","fallback","path","exact","component","Component"],"mappings":"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","file":"static/js/MovieDetailsPage.d05ea303.chunk.js","sourcesContent":["import Axios from 'axios';\n\nconst API_BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6b99ab3893b7ab7cc1f5e941cef2fb78';\n// +\nexport const getMoviesTrending = (mediaType = 'all', timeWindow = 'day') => {\n  return Axios.get(\n    `${API_BASE_URL}trending/${mediaType}/${timeWindow}?api_key=${API_KEY}`,\n  );\n};\n// +\nexport const getMoviesId = id => {\n  return Axios.get(`${API_BASE_URL}movie/${id}?api_key=${API_KEY}`);\n};\n// +\nexport const getMoviesQuery = query => {\n  return Axios.get(\n    `${API_BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`,\n  );\n};\n// +\nexport const getMoviesCredits = id => {\n  return Axios.get(`${API_BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n};\n// +\nexport const getMoviesReviews = id => {\n  return Axios.get(`${API_BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","module.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var i = step\n    var bytes = random(i)\n    while (i--) {\n      id += alphabet[bytes[i] & mask] || ''\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","import React, { Component, lazy, Suspense } from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport shortId from 'shortid';\nimport PNotify from 'pnotify/dist/es/PNotify';\nimport * as API from '../../services/api';\n\nconst Cast = lazy(() => import('../Cast/Cast' /* webpackChunkName: \"Cast\" */));\nconst Reviews = lazy(() =>\n  import('../Reviews/Reviews' /* webpackChunkName: \"Reviews\" */),\n);\nexport default class MovieDetailsPage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      goBack: PropTypes.func.isRequired,\n    }).isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    data: {},\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { id } = match.params;\n    API.getMoviesId(id)\n      .then(({ data }) => {\n        this.setState({ data });\n      })\n      .catch(error => {\n        PNotify.error({\n          text: error,\n        });\n      });\n  }\n\n  goBack = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { data } = this.state;\n    const style = {\n      width: '100px',\n    };\n    return (\n      <>\n        {data.id && (\n          <>\n            <section>\n              <div>\n                <button type=\"button\" onClick={this.goBack}>\n                  go to back\n                </button>\n              </div>\n              <div>\n                <div>\n                  <div>\n                    <img\n                      style={style}\n                      src={`https://image.tmdb.org/t/p/w300${data.backdrop_path}`}\n                      alt=\"\"\n                    />\n                  </div>\n                  <div>\n                    <h3>{data.original_title}</h3>\n                    <span>User Score: {data.vote_average}</span>\n                    <div>\n                      <h4>Overview</h4>\n                      <p>{data.overview}</p>\n                    </div>\n                    <div>\n                      <h4>genres</h4>\n                      <ul>\n                        {data.genres &&\n                          data.genres.length > 0 &&\n                          data.genres.map(i => (\n                            <li key={shortId.generate()}>{i.name}</li>\n                          ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h4>Aditional information</h4>\n                  <ul>\n                    <li>\n                      <NavLink to={`/movies/${data.id}/cast`}>Cast</NavLink>\n                    </li>\n                    <li>\n                      <NavLink to={`/movies/${data.id}/revievs`}>\n                        Reviews\n                      </NavLink>\n                    </li>\n                  </ul>\n                  <Suspense fallback={<div>Loading...</div>}>\n                    <Switch>\n                      <Route path=\"/movies/:id/cast\" exact component={Cast} />\n                      <Route\n                        path=\"/movies/:id/revievs\"\n                        exact\n                        component={Reviews}\n                      />\n                      {/* <Redirect to=\"/\" /> */}\n                    </Switch>\n                  </Suspense>\n                </div>\n              </div>\n            </section>\n          </>\n        )}\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}